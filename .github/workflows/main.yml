name: Django CI 

on:
  push:
    branches: [ "main" ]

  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      DEBUG: ${{ secrets.DEBUG }}
      SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}

      EXTERNAL_DATABASE_URL: ${{ secrets.EXTERNAL_DATABASE_URL }}

      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }} 
      EMAIL_POST: ${{ secrets.EMAIL_POST }}
      EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS }}
    services:
      postgres_main:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_HOST: ${{ env.POSTGRES_HOST }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5   
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10.7
      uses: actions/setup-python@v4
      with:
        python-version: 3.10.7
    - uses: actions/checkout@v2
    - name: Install redis
      run: sudo apt-get install -y redis-server
    - name: Verify that redis is up
      run: redis-cli ping    
    - name: Install Dependencies and Virtual Environment
      run: |
        pip3 install -r requirements.txt
        python -m pip install --upgrade pip 
        python3 -m venv env
        source env/bin/activate
        cd local/
    - name: run database migrations
      env:
          DATABASE_URL: ${{ env.EXTERNAL_DATABASE_URL }}
      run: |
        python3 manage.py migrate
    - name: Coverage report
      env:
        DEBUG: "0"
        SECRET_KEY: ${{ env.SECRET_KEY }}  
        DB_NAME: ${{ env.POSTGRES_USER }}
        DB_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        DB_HOST: ${{ env.POSTGRES_HOST }}
        DB_DATABASE: ${{ env.POSTGRES_DB }}
        DB_PORT: ${{ env.POSTGRES_PORT }}
        EMAIL_HOST_PASSWORD: ${{ env.EMAIL_HOST_PASSWORD }} 
        EMAIL_POST: ${{ env.EMAIL_POST }}
        EMAIL_USE_TLS: ${{ env.EMAIL_USE_TLS }}
      run: |
        pip install coverage
        coverage run --source='.' manage.py test blog
        coverage report
    - name: Django test
      env:
        DEBUG: "0"
        DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
        DB_NAME: ${{ env.POSTGRES_USER }}
        DB_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        DB_HOST: ${{ env.POSTGRES_HOST }}
        DB_DATABASE: ${{ env.POSTGRES_DB }}
        DB_PORT: ${{ env.POSTGRES_PORT }}
        EMAIL_HOST_PASSWORD: ${{ env.EMAIL_HOST_PASSWORD }} 
        EMAIL_POST: ${{ env.EMAIL_POST }}
        EMAIL_USE_TLS: ${{ env.EMAIL_USE_TLS }}
      run: |
        python3 manage.py test
